<!DOCTYPE html >
<html lang = "en" >
<head >
    <meta charset = "UTF-8" >
    <meta name = "viewport" content = "width=device-width, initial-scale=1.0" >
    <title > Site Daily Report < /title >
    <script src = "https://cdn.tailwindcss.com" > < / script >
    <link href = "https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel = "stylesheet" >
    <script type = "module" >
        // Firebase Imports
        import {initializeApp} from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import {getAuth
        import signInAnonymously
        import onAuthStateChanged
        import signInWithCustomToken} from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import {getFirestore
        import collection
        import addDoc
        import serverTimestamp
        import setLogLevel} from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        // --- Firebase Configuration - --
        // These variables are placeholders and will be automatically populated in the environment.
        const firebaseConfig = typeof __firebase_config != = 'undefined' ? JSON.parse(__firebase_config): {apiKey: "DEMO", authDomain: "DEMO", projectId: "DEMO"};
        const appId = typeof __app_id != = 'undefined' ? __app_id: 'default-app-id';

        // --- Initialize Firebase - --
        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);
        const db = getFirestore(app);
        setLogLevel('debug');

        let userId = null;

        // --- Authentication - --
        onAuthStateChanged(auth, async (user)= > {
            if (user) {
                console.log("User is signed in:", user.uid);
                userId = user.uid;
                document.getElementById('userIdDisplay').textContent = `User ID: ${userId}`;
                document.getElementById('mainContent').classList.remove('hidden');
                document.getElementById('loading').classList.add('hidden');
            } else {
                console.log("User is signed out. Attempting to sign in.");
                try {
                    if (typeof __initial_auth_token != = 'undefined' & & __initial_auth_token) {
                        await signInWithCustomToken(auth, __initial_auth_token);
                    } else {
                        await signInAnonymously(auth);
                    }
                } catch(error) {
                    console.error("Error during sign-in:", error);
                    document.getElementById('loading').textContent = 'Authentication failed. Please refresh.';
                }
            }
        });

        // --- DOM Event Listeners - --
        document.addEventListener('DOMContentLoaded', ()= > {
            // Set default date to today
            document.getElementById('report_date').valueAsDate = new Date();

            // Add event listeners for the 'Add' buttons
            document.getElementById('addManpower').addEventListener('click', ()= > addRow('manpowerTbody', createManpowerRow));
            document.getElementById('addEquipment').addEventListener('click', ()= > addRow('equipmentTbody', createEquipmentRow));
            document.getElementById('addActivity').addEventListener('click', ()= > addRow('activityTbody', createActivityRow));
            document.getElementById('addMaterial').addEventListener('click', ()= > addRow('materialTbody', createMaterialRow));

            // Add event listener for the save button
            document.getElementById('saveReport').addEventListener(
                'click', saveDailyReport);
        });

        // --- Dynamic Row Creation Functions - --
        function addRow(tbodyId, rowCreator) {
            const tbody = document.getElementById(tbodyId);
            tbody.appendChild(rowCreator());
        }

        function createManpowerRow() {
            const tr = document.createElement('tr');
            tr.className = 'border-b border-gray-200';
            tr.innerHTML = `
                < td class = "p-2" > <input type = "text" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., Electrician" > < / td >
                < td class = "p-2" > <input type = "number" min = "0" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., 4" > < / td >
                < td class = "p-2" > <input type = "number" min = "0" step = "0.5" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., 8.0" > < / td >
                < td class = "p-2 text-center" > <button type = "button" class = "text-red-500 hover:text-red-700 font-bold" onclick = "this.closest('tr').remove()" > X < /button > < / td >
            `;
            return tr;
        }

        function createEquipmentRow() {
            const tr = document.createElement('tr');
            tr.className = 'border-b border-gray-200';
            tr.innerHTML = `
                < td class = "p-2" > <input type = "text" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., 50-Ton Crane" > < / td >
                < td class = "p-2" > <input type = "number" min = "0" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., 1" > < / td >
                < td class = "p-2" > <input type = "number" min = "0" step = "0.5" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., 6.5" > < / td >
                < td class = "p-2 text-center" > <button type = "button" class = "text-red-500 hover:text-red-700 font-bold" onclick = "this.closest('tr').remove()" > X < /button > < / td >
            `;
            return tr;
        }

        function createActivityRow() {
            const tr = document.createElement('tr');
            tr.className = 'border-b border-gray-200';
            tr.innerHTML = `
                < td class = "p-2" > <textarea class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" rows = "1" placeholder = "Describe work activity" > < / textarea > < / td >
                < td class = "p-2" >
                    < select class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" >
                        < option > In Progress < /option >
                        < option > Completed < /option >
                        < option > Delayed < /option >
                        < option > Not Started < /option >
                    < / select >
                < / td >
                < td class = "p-2" > <input type = "number" min = "0" max = "100" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "%" > < / td >
                < td class = "p-2 text-center" > <button type = "button" class = "text-red-500 hover:text-red-700 font-bold" onclick = "this.closest('tr').remove()" > X < /button > < / td >
            `;
            return tr;
        }

        function createMaterialRow() {
            const tr = document.createElement('tr');
            tr.className = 'border-b border-gray-200';
            tr.innerHTML = `
                < td class = "p-2" > <input type = "text" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., Concrete Mix" > < / td >
                < td class = "p-2" > <input type = "number" min = "0" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., 12" > < / td >
                < td class = "p-2" > <input type = "text" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., mÂ³" > < / td >
                < td class = "p-2" > <input type = "text" class = "w-full p-2 border rounded-md bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder = "e.g., City Concrete" > < / td >
                < td class = "p-2 text-center" > <button type = "button" class = "text-red-500 hover:text-red-700 font-bold" onclick = "this.closest('tr').remove()" > X < /button > < / td >
            `;
            return tr;
        }

        // --- Data Collection and Saving - --
        function getTableData(tbodyId, columns) {
            const data = [];
            const rows = document.getElementById(tbodyId).querySelectorAll('tr');
            rows.forEach(row= > {
                const rowData = {};
                const inputs = row.querySelectorAll('input, select, textarea');
                let isValid = true;
                columns.forEach((col, index)= > {
                    if (inputs[index] & & inputs[index].value.trim() != = '') {
                        rowData[col] = inputs[index].value;
                    } else {
                        isValid = false; // Don't add incomplete rows
                    }
                });
                if (isValid) data.push(rowData);
            });
            return data;
        }

        async function saveDailyReport() {
            if (!userId) {
                showModal('Error', 'You are not authenticated. Cannot save report.');
                return;
            }

            const saveButton = document.getElementById('saveReport');
            saveButton.disabled = true;
            saveButton.textContent = 'Saving...';

            // 1. Collect all data from the form
            const reportData = {
                // Main Report Info
                projectName: document.getElementById('project_name').value,
                reportDate: document.getElementById('report_date').value,
                preparedBy: document.getElementById('prepared_by').value,
                weather: document.getElementById('weather').value,
                siteConditions: document.getElementById('site_conditions').value,
                generalNotes: document.getElementById('general_notes').value,
                // Sub-tables
                manpower: getTableData('manpowerTbody', ['trade', 'count', 'hours']),
                equipment: getTableData('equipmentTbody', ['name', 'count', 'hours']),
                activities: getTableData('activityTbody', ['description', 'status', 'percentComplete']),
                materials: getTableData('materialTbody', ['name', 'quantity', 'unit', 'supplier']),
                // Metadata
                createdAt: serverTimestamp(),
                authorId: userId
            };

            // Basic validation
            if (!reportData.projectName || !reportData.reportDate || !reportData.preparedBy) {
                showModal('Validation Error', 'Project Name, Report Date, and Prepared By are required fields.');
                saveButton.disabled = false;
                saveButton.textContent = 'Save Daily Report';
                return;
            }

            // 2. Save to Firestore
            try {
                const collectionPath = `artifacts/${appId}/users/${userId}/daily_reports`;
                const docRef = await addDoc(collection(db, collectionPath), reportData);
                console.log("Document written with ID: ", docRef.id);
                showModal('Success!', 'Your daily report has been saved successfully.');
                // Optional: Reset form after successful save
                // document.getElementById('reportForm').reset();
                // document.getElementById('report_date').valueAsDate = new Date();
                // ['manpowerTbody', 'equipmentTbody', 'activityTbody', 'materialTbody'].forEach(id => document.getElementById(id).innerHTML = '');

            } catch (e) {
                console.error("Error adding document: ", e);
                showModal('Save Error', `There was an error saving your report: ${e.message}`);
            } finally {
                saveButton.disabled = false;
                saveButton.textContent = 'Save Daily Report';
            }
        }
        
        // --- UI Utility: Modal ---
        function showModal(title, message) {
            document.getElementById('modalTitle').textContent = title;
            document.getElementById('modalMessage').textContent = message;
            document.getElementById('modal').classList.remove('hidden');
        }

        window.closeModal = function() {
            document.getElementById('modal').classList.add('hidden');
        }

    </script>
    <style>
        body { font-family: 'Inter', sans-serif; }
        .card {
            background-color: white;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            margin-bottom: 1.5rem;
            overflow: hidden;
        }
        .card-header {
            padding: 1rem 1.5rem;
            background-color: #f9fafb;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .card-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #111827;
        }
        .card-body {
            padding: 1.5rem;
        }
        .add-btn {
            background-color: #eef2ff;
            color: #4338ca;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: background-color 0.2s;
        }
        .add-btn:hover {
            background-color: #e0e7ff;
        }
        .save-btn {
            background-color: #16a34a; /* Green */
            color: white;
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            transition: background-color 0.2s;
        }
        .save-btn:hover {
            background-color: #15803d;
        }
        .save-btn:disabled {
            background-color: #9ca3af;
            cursor: not-allowed;
        }
    </style>
</head>
<body class="bg-gray-100">

    <div id="loading" class="flex items-center justify-center h-screen text-gray-600">
        Loading Application...
    </div>

    <div id="mainContent" class="container mx-auto p-4 md:p-8 hidden">
        <header class="mb-8">
            <h1 class="text-4xl font-bold text-gray-800">Site Daily Report</h1>
            <p class="text-gray-600">Fill out the details for today's progress. Click 'Save' when finished.</p>
            <p id="userIdDisplay" class="text-xs text-gray-400 mt-2"></p>
        </header>

        <form id="reportForm">
            <!-- General Information Card -->
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">General Information</h2>
                </div>
                <div class="card-body grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <div>
                        <label for="project_name" class="block text-sm font-medium text-gray-700 mb-1">Project Name</label>
                        <input type="text" id="project_name" value="Transmission Line Upgrade - Section 5" class="w-full p-2 border rounded-md bg-white focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label for="report_date" class="block text-sm font-medium text-gray-700 mb-1">Report Date</label>
                        <input type="date" id="report_date" class="w-full p-2 border rounded-md bg-white focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label for="prepared_by" class="block text-sm font-medium text-gray-700 mb-1">Prepared By</label>
                        <input type="text" id="prepared_by" placeholder="Your Name" class="w-full p-2 border rounded-md bg-white focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div class="md:col-span-2">
                        <label for="weather" class="block text-sm font-medium text-gray-700 mb-1">Weather</label>
                        <input type="text" id="weather" placeholder="e.g., Sunny, 32Â°C, Light Wind" class="w-full p-2 border rounded-md bg-white focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div class="md:col-span-3">
                        <label for="site_conditions" class="block text-sm font-medium text-gray-700 mb-1">Site Conditions</label>
                        <textarea id="site_conditions" rows="2" class="w-full p-2 border rounded-md bg-white focus:ring-blue-500 focus:border-blue-500" placeholder="e.g., Ground is dry, access roads are clear."></textarea>
                    </div>
                </div>
            </div>

            <!-- Work Activities -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Work Activities</h3>
                    <button type="button" id="addActivity" class="add-btn">+ Add Activity</button>
                </div>
                <div class="overflow-x-auto">
                    <table class="w-full text-sm">
                        <thead class="bg-gray-50 text-left text-gray-600">
                            <tr>
                                <th class="p-2 font-medium w-2/5">Description</th>
                                <th class="p-2 font-medium w-1/5">Status</th>
                                <th class="p-2 font-medium w-1/5">Complete (%)</th>
                                <th class="p-2 font-medium text-center">Remove</th>
                            </tr>
                        </thead>
                        <tbody id="activityTbody">
                            <!-- Dynamic rows will be inserted here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Manpower Log -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Manpower Log</h3>
                    <button type="button" id="addManpower" class="add-btn">+ Add Manpower</button>
                </div>
                <div class="overflow-x-auto">
                    <table class="w-full text-sm">
                        <thead class="bg-gray-50 text-left text-gray-600">
                            <tr>
                                <th class="p-2 font-medium">Trade / Skill</th>
                                <th class="p-2 font-medium">No. of Workers</th>
                                <th class="p-2 font-medium">Hours Worked</th>
                                <th class="p-2 font-medium text-center">Remove</th>
                            </tr>
                        </thead>
                        <tbody id="manpowerTbody"></tbody>
                    </table>
                </div>
            </div>

            <!-- Equipment Log -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Equipment Log</h3>
                    <button type="button" id="addEquipment" class="add-btn">+ Add Equipment</button>
                </div>
                <div class="overflow-x-auto">
                    <table class="w-full text-sm">
                         <thead class="bg-gray-50 text-left text-gray-600">
                            <tr>
                                <th class="p-2 font-medium">Equipment Name</th>
                                <th class="p-2 font-medium">Quantity</th>
                                <th class="p-2 font-medium">Hours Used</th>
                                <th class="p-2 font-medium text-center">Remove</th>
                            </tr>
                        </thead>
                        <tbody id="equipmentTbody"></tbody>
                    </table>
                </div>
            </div>
            
            <!-- Materials Delivered -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Materials Delivered</h3>
                    <button type="button" id="addMaterial" class="add-btn">+ Add Material</button>
                </div>
                <div class="overflow-x-auto">
                    <table class="w-full text-sm">
                         <thead class="bg-gray-50 text-left text-gray-600">
                            <tr>
                                <th class="p-2 font-medium">Material Name</th>
                                <th class="p-2 font-medium">Quantity</th>
                                <th class="p-2 font-medium">Unit</th>
                                <th class="p-2 font-medium">Supplier</th>
                                <th class="p-2 font-medium text-center">Remove</th>
                            </tr>
                        </thead>
                        <tbody id="materialTbody"></tbody>
                    </table>
                </div>
            </div>

            <!-- General Notes -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">General Notes / Issues</h3>
                </div>
                <div class="card-body">
                    <textarea id="general_notes" rows="4" class="w-full p-2 border rounded-md bg-white focus:ring-blue-500 focus:border-blue-500" placeholder="Note any safety incidents, delays, visitor information, or other remarks."></textarea>
                </div>
            </div>

            <!-- Save Button -->
            <div class="mt-8 flex justify-end">
                <button type="button" id="saveReport" class="save-btn">Save Daily Report</button>
            </div>
        </form>
    </div>

    <!-- Modal for notifications -->
    <div id="modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <h3 class="text-lg leading-6 font-medium text-gray-900" id="modalTitle"></h3>
                <div class="mt-2 px-7 py-3">
                    <p class="text-sm text-gray-500" id="modalMessage"></p>
                </div>
                <div class="items-center px-4 py-3">
                    <button id="button" class="px-4 py-2 bg-blue-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-300" onclick="closeModal()">
                        OK
                    </button>
                </div>
            </div>
        </div>
    </div>

</body>
</html>
